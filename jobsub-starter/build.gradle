import java.nio.file.Paths

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.0.1' apply false
}

apply plugin: 'io.spring.dependency-management'
dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

group 'edu.utica'
version '1.0'

sourceCompatibility = 1.8

def packageReadProps = {
    Properties properties = new Properties()
    Paths.get(System.properties.'user.home','.credentials','githubPackagesRead.properties').withInputStream {
        properties.load(it)
    }
    return properties
}.call()

repositories {
    mavenCentral()
    maven {
        url = uri('https://maven.pkg.github.com/utica-iits-ais/*')
        credentials {
            username = packageReadProps.username
            password = packageReadProps.password
        }
    }
}


dependencies {
    api 'edu.utica:jobsub-hello-starter:1.0'
    api 'edu.utica:jobsub-datasource-starter:1.0'
}


def publishProps = {
    Properties properties = new Properties()
    Paths.get(System.properties.'user.home','.credentials','githubPackagesPublish.properties').withInputStream {
        properties.load(it)
    }
    return properties
}.call()

publishing {
    repositories {
        maven {
            name = 'jobsub-starter'
            url = uri('https://maven.pkg.github.com/utica-iits-ais/jobsub-starter')
            credentials {
                username = publishProps.username
                password = publishProps.password
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            from components.java
        }
    }
}
